Directory API (ver 1.0.6):
New:
- tests added
New:
- nullable properties not serialize
- tests added
-------
- Position added
- Person added

auth: none

Current data source properties:
url=jdbc:mysql://localhost:3306/directory
username=directoryadmin
password=dirpassword
When you run, a test hierarchy of objects is created.
-----------------------------------------------------------------------------
Department object format detail:

Minimum filling of the object (api response):
{
    "id": 5,               - id (will be ignore in put request)
    "name": "c",           - null and "" not support (further for String object - not null)
    "contact": null,       - nullable
    "hasPositions": false, - property (will be ignore in put request)
    "hasChild": true,      - property (will be ignore in put request)
    "parentId": 1          - can be null in root department (will be ignore in put request)
}

Maximum filling of the object:
{
    "id": 1,
    "name": "Company name",
    "contact": {
        "id": 1,
        "addresses": [
            {
                "name": "primary",
                "zipCode": "00000",
                "country": "country",
                "region": "region",
                "district": "district",
                "city": "city",
                "street": "street",
                "house": "house",
                "office": "office",
                "common": true
            }
        ],
        "emails": [
            {
                "name": "E-mail",
                "email": "e@e",
                "common": true
            }
        ],
        "phones": [
            {
                "name": "tel",
                "number": "00000",
                "common": true
            },
            {
                "name": "tel/fax",
                "number": "00001",
                "common": true
            }
        ],
        "others": [
            {
                "name": "www",
                "value": "http://www.company.com",
                "common": true
            }
        ]
    },
    "hasPositions": false,
    "hasChild": true,
    "parentId": null
}

Expected object in PUT request (other fields will be ignored):
{
    "name": "company",      - not null
    "contact": {            - nullable
        "id": 1,
        "addresses": [],
        "emails": [],
        "phones": [],
        "others": []
    }
}
-----------------------------------------------------------------------------
Contact object format detail:

Minimum filling of the object:
{
    "addresses": [],  - Address object array
    "emails": [],     - Email object array
    "phones": [],     - Phone object array
    "others": []      - OtherInfo object array
}

Maximum filling of the object:
{
    "addresses": [
        {
            "name": "primary",          - not null
            "zipCode": "00000",         - nullable |
            "country": "country",       - nullable |
            "region": "region",         - nullable | Can't
            "district": "district",     - nullable | be
            "city": "city",             - nullable | clear
            "street": "street",         - nullable | together
            "house": "house",           - nullable |
            "office": "office",         - nullable |
            "common": true              - not null
        }
    ],
    "emails": [
        {
            "name": "E-mail",           - not null
            "email": "e@e",             - not null | unique within a single contact
            "common": true              - not null
        }
    ],
    "phones": [
        {
            "name": "tel",              - not null
            "number": "00000",          - not null | unique within a single contact
            "common": true              - not null
        }
    ],
    "others": [
        {
            "name": "www",                       - not null
            "value": "http://www.company.com",   - not null | unique within a single contact
            "common": true                       - not null
        }
    ]
}
-----------------------------------------------------------------------------
Position object format detail:

Minimum filling of the object:
{
    "id": 7,                            - id (will be ignore in put request)
    "namePosition": "Position Name",    - not null (duplicate support)
    "person": null,                     - nullable
    "departmentId": 5                   - not null (will be ignore in put request)
}

Maximum filling of the object:
{
    "id": 7,
    "namePosition": "Position Name",
    "person": {
        "id": 7,
        "surname": "Surname",
        "name": "Name",
        "patronymic": "Patronymic"
        "contact": null
    },
    "departmentId": 5
}
-----------------------------------------------------------------------------
Person object format detail:
{
    "id": 7,
    "surname": "Surname",        - nullable | Can't be
    "name": "Name",              - nullable | clear
    "patronymic": null           - nullable | together
    "contact": null
}
-----------------------------------------------------------------------------
(GET) http://localhost:8060/restapi/department
Возвращает обьект JSON соответствующий корневому департаменту
В случает отсутствия обьекта возвращает null

(PUT) http://localhost:8060/restapi/department
Сохраняет корневой департамент (производит изменение в случае существования корневого департамента)
----------
(GET) http://localhost:8060/restapi/department/{id}
Возвращает обьект Department с соответствующим id
В случает отсутствия обьекта возвращает null

(PUT) http://localhost:8060/restapi/department/{id}
Изменяет обьект Department с соответствующим id (обьект с указанным id должен быть создан)
Дубликаты обьетов внутри родительского обьекта контролируются, в случае обнаружения дубликата возвращается ошибка.
----------
(GET) http://localhost:8060/restapi/department/child/{id}
Возвращает массив дочерних обьектов Department подчиненных обьекту с указанным id
В случает отсутствия обьектов возвращает []

(PUT) http://localhost:8060/restapi/department/child/{id}
Добавляет новый дочерний обьект Department подчиненных обьекту с указанным id
Дубликаты обьетов внутри родительского обьекта контролируются, в случае обнаружения дубликата возвращается ошибка.
----------
(GET) http://localhost:8060/restapi/department/positions/{id}
Возвращает массив обьектов Position подчиненных обьекту Department с указанным id

(PUT) http://localhost:8060/restapi/department/positions/{id}
Добавляет новый обьект Position подчиненный обьекту Department с указанным id
Дубликаты должностей поддерживаются.
----------